<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd 
	http://cxf.apache.org/jaxrs 
	http://cxf.apache.org/schemas/jaxrs.xsd 
	http://www.springframework.org/schema/data/mongo 
	http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">


	<aop:aspectj-autoproxy />
	<task:annotation-driven/>

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<jaxrs:server id="userRegServer" address="/user">
		<jaxrs:serviceBeans>
			<ref bean="com.user.reg.service" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
		</jaxrs:providers>
		<jaxrs:inInterceptors>
			<ref bean="user.reg.interceptor"/>
		</jaxrs:inInterceptors>
	</jaxrs:server>
	<bean id="com.user.reg.service"
		class="com.sample.rest.user.registration.impl.UserRegistrationService">
		<property name="dataAdapter">
			<ref bean="registrationAdapter" />
		</property>
		<property name="serviceDelegator">
			<ref bean="tenantServiceDelegator" />
		</property>
		
	</bean>
	<bean id="registrationAdapter"
		class="com.sample.user.service.orchestration.RegistrationDataAdapter">
		<property name="configuration">
			<ref bean="configDAO" />
		</property>
	</bean>
	<bean id="configDAO"
		class="com.sample.rest.user.registration.dao.impl.ConfigurationDAOImpl">
		<property name="operations">
			<ref bean="mongoTemplate" />
		</property>
	</bean>
	<mongo:mongo host="127.0.0.1" port="27017"></mongo:mongo>
	<mongo:db-factory dbname="tenants" />
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	<bean id="user.reg.interceptor"
		class="com.sample.rest.user.registration.interceptor.RegistrationRequestInterceptor"></bean>
	<bean id="businessRuleDAO"
		class="com.sample.rest.user.registration.dao.impl.BusinessRuleEngineDAOImpl">
		<property name="operations">
			<ref bean="mongoTemplate" />
		</property>
	</bean>
	<bean id="usertrace.aspect"
		class="com.sample.rest.user.registration.annotation.UDEAspectTracer"></bean>
	<bean id="testAspect" class="com.sample.user.service.orchestration.TestAspector">
	</bean>
	<bean id="workflowEngine" class="com.sample.user.service.orchestration.WorkflowEngine" init-method="init">
		<property name="businessRules">
			<ref bean="businessRuleDAO" />
		</property>
	</bean>	
	<bean id="tenantServiceDelegator" class="com.sample.user.service.orchestration.TenantServiceDelegator" >
		<property name="engine">
			<ref bean="workflowEngine" />
		</property>
		<property name="configuration">
			<ref bean="configDAO"/>
		</property>
	</bean>			
</beans>